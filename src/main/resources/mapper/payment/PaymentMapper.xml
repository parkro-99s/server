<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.parkro.server.domain.payment.mapper.PaymentMapper">
    <select id="selectMemberCoupons" parameterType="Integer" resultType="GetPaymentCouponRes">
        <![CDATA[
            SELECT
                mc.member_coupon_id AS memberCouponId,
                mc.coupon_id AS couponId,
                mc.parking_lot_id AS parkingLotId,
                mc.status AS status,
                mc.created_date AS createdDate,
                c.discount_hour AS discountHour,
                c.end_date AS endDate
            FROM
                member_coupon mc
                    INNER JOIN coupon c ON mc.coupon_id = c.coupon_id
            WHERE
                mc.member_id = #{memberId}
              AND mc.used_date IS NULL
              AND mc.status = 'ACTIVE'
        ]]>
    </select>
    <insert id="insertPayment" parameterType="Map">
        <selectKey keyProperty="req.paymentId" resultType="Integer" order="BEFORE">
            <![CDATA[
                SELECT payment_seq.nextval AS paymentId FROM dual
            ]]>
        </selectKey>
        INSERT INTO payment (
        payment_id,
        member_id,
        parking_id,
        member_coupon_id,
        receipt_id,
        coupon_discount_time,
        receipt_discount_time,
        total_parking_time,
        total_price,
        card,
        payment_time,
        payment_key,
        cancelled_date,
        status
        )
        VALUES (
        #{req.paymentId},
        #{memberId},
        #{req.parkingId},
        #{req.memberCouponId, jdbcType=INTEGER},
        #{req.receiptId, jdbcType=INTEGER},
        #{req.couponDiscountTime},
        #{req.receiptDiscountTime},
        #{req.totalParkingTime},
        #{req.totalPrice},
        #{req.card},
        DEFAULT,
        #{req.paymentKey, jdbcType=VARCHAR},
        #{req.cancelledDate, jdbcType=TIMESTAMP},
        DEFAULT
        )
    </insert>
    
    <select id="selectPaymentByParkingId" resultType="GetPaymentRes" parameterType="Integer">
        <![CDATA[
        SELECT
            py.payment_id AS paymentId,
            py.parking_id AS parkingId,
            py.total_parking_time AS totalParkingTime,
            py.total_price AS totalPrice,
            EXTRACT(DAY FROM pk.exit_date - pk.entrance_date) * 24 +
            EXTRACT(HOUR FROM pk.exit_date - pk.entrance_date) AS parkingTimeHour,
            EXTRACT(MINUTE FROM pk.exit_date - pk.entrance_date) AS parkingTimeMinute,
            py.coupon_discount_time AS couponDiscountTime,
            py.receipt_discount_time AS receiptDiscountTime,
            py.card,
            py.payment_time AS paymentTime,
            pk.car_number AS carNumber,
            pk.entrance_date AS entranceDate,
            pk.exit_date AS exitDate,
            pk.status AS parkingStatus,
            pl.parking_lot_id AS parkingLotId,
            pl.store_id AS storeId,
            pl.name AS parkingLotName,
            s.name AS storeName
        FROM payment py
        INNER JOIN
            parking pk ON py.parking_id = pk.parking_id
        INNER JOIN
            parking_lot pl ON pk.parking_lot_id = pl.parking_lot_id
        INNER JOIN
            store s ON pl.store_id = s.store_id
        WHERE py.parking_id = #{parking_id}
          AND py.cancelled_date IS NULL
        ]]>
    </select>
  
    <update id="updateCancelledDate" parameterType="Integer">
        <![CDATA[
            UPDATE payment
            SET
            cancelled_date = CURRENT_TIMESTAMP,
            status = 'CANCELLED'
            WHERE payment_id = #{paymentId}
        ]]>
    </update>
  
</mapper>
