<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    파일명 : ParkingMapper.xml
    설  명 : 주차

    == 개정이력 ========================================
    수정일         수정자      수정내용
    ==========    =======   ================================
    2024.07.29    양재혁     parking 내 memberId 변경
    2024.07.29    양재혁     parking 내 memberId null로 변경
-->
<mapper namespace="com.parkro.server.domain.parking.mapper.ParkingMapper">

    <!-- parking_id로 주차 정보 조회 -->
    <select id="selectParkingByParkingId" resultType="GetParkingRes" parameterType="Integer">
        <![CDATA[
            SELECT parking_id AS parkingId,
                   parking_lot_id AS parkingLotId,
                   member_id AS memberId,
                   car_number AS carNumber,
                   entrance_date AS entranceDate,
                   exit_date AS exitDate,
                   status
            FROM parking
            WHERE parking_id = #{parkingId}
        ]]>
    </select>

    <!-- 주차 상태 (@Param status)로 변경 -->
    <update id="updateParkingStatus" parameterType="Map">
        <![CDATA[
        UPDATE parking
        SET
            status = #{status}
        WHERE parking_id = #{parkingId}
        ]]>
    </update>
  
    <!-- 입차 -->
    <insert id="insertParking" parameterType="PostParkingReq">
        <selectKey keyProperty="parkingId" resultType="Integer" order="BEFORE">
            <![CDATA[
                SELECT parking_seq.nextval AS parkingId FROM dual
            ]]>
        </selectKey>
        <![CDATA[
        INSERT INTO parking (
            parking_id, parking_lot_id, car_number, member_id
        ) VALUES (
            #{parkingId}, #{parkingLotId}, #{carNumber}, #{memberId, jdbcType=INTEGER}
        )
        ]]>
    </insert>

    <!-- 출차 -->
    <update id="updateParkingOut" parameterType="PatchParkingReq">
        <![CDATA[
        UPDATE parking
        SET status = 'EXIT'
        WHERE parking_lot_id = #{parkingLotId}
          AND car_number = #{carNumber}
          AND status = 'PAY'
        ]]>
    </update>
  
    <!-- 주차 정산(전) 정보 조회 -->
    <select id="selectParkingPay" parameterType="Integer" resultType="GetParkingPayRes">
        <![CDATA[
        SELECT
            p.car_number AS carNumber,
            p.parking_id AS parkingId,
            p.status,
            s.name AS storeName,
            pl.name AS parkingLotName,
            p.entrance_date AS entranceDate,
            EXTRACT(DAY FROM (CURRENT_TIMESTAMP - p.entrance_date)) * 24 +
            EXTRACT(HOUR FROM (CURRENT_TIMESTAMP - p.entrance_date)) AS parkingTimeHour,
            EXTRACT(MINUTE FROM CURRENT_TIMESTAMP-p.entrance_date) AS parkingTimeMinute,
            pl.per_price AS perPrice
        FROM
            member m
        INNER JOIN
            parking p ON m.member_id = p.member_id
        INNER JOIN
            parking_lot pl ON p.parking_lot_id = pl.parking_lot_id
        INNER JOIN
            store s ON pl.store_id = s.store_id
        WHERE
            m.member_id = #{memberId}
            AND p.status = 'ENTRANCE'
        ORDER BY
            p.entrance_date ASC
        FETCH FIRST 1 ROW ONLY
        ]]>
    </select>

    <!-- 나의 주차 내역 목록 조회 -->
    <select id="selectParkingListByMemberId" parameterType="GetParkingReq" resultType="GetParkingRes">
        SELECT p.parking_id AS parkingId,
               s.name AS storeName,
               pl.name AS parkingLotName,
               p.car_number AS carNumber,
               p.entrance_date AS entranceDate,
               p.status
        FROM
            parking p
            INNER JOIN
                parking_lot pl ON p.parking_lot_id = pl.parking_lot_id
            INNER JOIN
                store s ON pl.store_id = s.store_id
        WHERE p.member_id = #{memberId}
            AND deleted_date IS NULL
        ORDER BY p.parking_id DESC
        OFFSET ((#{page}-1)*#{pageSize}) ROWS FETCH NEXT #{pageSize} ROWS ONLY
    </select>

    <!-- 주차 내역 삭제 -->
    <update id="deleteParkingById" parameterType="Integer">
        <![CDATA[
        UPDATE parking
        SET deleted_date = CURRENT_TIMESTAMP
        WHERE parking_id = #{parkingId}
        ]]>
    </update>

    <!-- [관리자] 주차 내역 상세 조회 -->
    <select id="selectAdminParkingDetails" resultType="GetParkingDetailRes" parameterType="Integer">
        <![CDATA[
        SELECT
            p.car_number AS carNumber,
            s.name AS storeName,
            pl.name AS parkingLotName,
            p.entrance_date AS entranceDate,
            p.exit_date AS exitDate,
            p.status AS parkingStatus,
            py.payment_time AS paymentDate,
            py.coupon_discount_time AS couponDiscountTime,
            py.receipt_discount_time AS receiptDiscountTime,
            py.total_parking_time AS totalParkingTime,
            EXTRACT(DAY FROM (py.payment_time - p.entrance_date)) * 24 +
            EXTRACT(HOUR FROM (py.payment_time - p.entrance_date)) AS parkingTimeHour,
            EXTRACT(MINUTE FROM py.payment_time - p.entrance_date) AS parkingTimeMinute,
            py.total_price AS totalPrice
        FROM
            parking p
            INNER JOIN
                parking_lot pl ON p.parking_lot_id = pl.parking_lot_id
            INNER JOIN
                store s ON pl.store_id = s.store_id
            LEFT JOIN
                payment py ON py.parking_id = p.parking_id AND py.status = 'COMPLETED'
        WHERE
            p.parking_id = #{parkingId}
        ]]>
    </select>

    <!-- [관리자] 지점별 주차 내역 목록 조회 -->
    <select id="selectParkingListByStore" parameterType="GetParkingReq" resultType="GetParkingRes">
        SELECT
            p.parking_id AS parkingId,
            s.name AS storeName,
            pl.name AS parkingLotName,
            p.car_number AS carNumber,
            p.entrance_date AS entranceDate,
            p.status
        FROM
            parking p
            INNER JOIN
                parking_lot pl ON p.parking_lot_id = pl.parking_lot_id
            INNER JOIN
                store s ON pl.store_id = s.store_id
        WHERE
            s.store_id = #{storeId}
            AND
            p.parking_lot_id = #{parkingLotId}
            AND TO_CHAR(p.entrance_date, 'yyyy-MM-dd') = #{date}
            <if test="carNumber != null and carNumber != ''">
                AND LOWER(p.car_number) LIKE '%' || LOWER(#{carNumber}) || '%'
            </if>
        ORDER BY p.parking_id DESC
        OFFSET ((#{page}-1)*#{pageSize}) ROWS FETCH NEXT #{pageSize} ROWS ONLY
    </select>

    <!-- [관리자] 결제 완료 -->
    <update id="updateParkingOutById" parameterType="Integer">
        <![CDATA[
        UPDATE parking
        SET status = 'PAY'
        WHERE parking_id = #{parkingId}
        ]]>
    </update>


    <!-- parking 내 memberId 변경 -->
    <update id="updateMemberId" parameterType="PostMemberReq">
    <![CDATA[
        UPDATE parking
        SET member_id = #{memberId}
        WHERE member_id IS NULL
          AND car_number = #{carNumber, jdbcType=VARCHAR}
        ]]>
</update>

    <!-- parking 내 memberId null로 변경 -->
    <update id="deleteMemberId" parameterType="String">
        <![CDATA[
        UPDATE parking
        SET member_id = NULL
        WHERE car_number = #{carNumber}
        ]]>
    </update>

</mapper>
